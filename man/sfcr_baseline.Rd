% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfcr_baseline.R
\name{sfcr_baseline}
\alias{sfcr_baseline}
\title{Simulate the baseline scenario of a stock-flow consistent model}
\usage{
sfcr_baseline(
  equations,
  external,
  periods,
  initial = NULL,
  hidden = NULL,
  max_iter = 350,
  .hidden_tol = 1,
  tol = 1e-08
)
}
\arguments{
\item{equations}{A list containing all the equations of the model to be simulated. The equations
must be written in R syntax, with the left-hand side separated from the right-hand side
by a tilde \code{~}.}

\item{external, initial}{List of external variables (exogenous and parameters) or of initial
values. They should be written as equations using the R syntax.}

\item{periods}{A number specifying the total number of periods of the model to be simulated.}

\item{hidden}{Named object that identify the two variables that make the hidden equality
in the SFC model, e.g., \code{c("H_h" = "H_s")}. Defaults to NULL.
If \code{hidden} is supplied, the model will evaluate if the hidden equation is satisfied.}

\item{max_iter}{Maximum iterations allowed per period.}

\item{.hidden_tol}{Error tolerance to accept the equality of the hidden equation. Defaults to 1.}

\item{tol}{Tolerance accepted to determine convergence in the Gauss Seidel algorithm.}
}
\value{
A \code{sfcr_tbl}.
}
\description{
The \code{sfcr_baseline()} function is used to simulate a SFC model. With adequate number of
periods, the simulated model should converge to a steady state scenario.
}
\details{
The output of a \code{sfcr_baseline()} is a \code{sfcr_tbl}. The only difference between
a \code{sfcr_tbl} and a standard \code{tbl_df} is that the former has two extra attributes:
\code{matrix} and \code{call}. The \code{matrix} attribute, for example, can be accessed by
calling \code{attributes(sfcr_sim_object)$matrix}.
It is possible to see, in the matrix, the number of iterations required to calculate each
block of equations in the model.
The \code{call} attribute shows the blocks of equations and preserve the call that are used
internally.

The \code{equations}, \code{exogenous}, and \code{parameters} arguments must be written
with the R formula syntax, i.e., the left-hand side of each item is separated to the
right-hand side by a tilde. Variables that represent lags of endogenous or exogenous
variables must be followed by \code{[-1]}. See examples for details on the syntax.

This function uses two consecutive depth-first searches to determine the blocks
of independent equations. These blocks are used in turn to solve the model
sequentially, optimizing the simulation. The \code{igraph} package is used
to implement this algorithm.

The model is simulated using the Gauss Seidel algorithm, as described
by \insertCite{kinsella2011gauss}{sfcr}. It calculates the values of each
block of independent equations sequentially. When the absolute difference
between the value calculated in the new round and the value calculated
in the previous round divided by the value of the previous round for
all variables in the block falls below 1e-4, the model jumps to the
next block.
}
\examples{
eqs <- sfcr_set(
  TX_s ~ TX_d,
  YD ~ W * N_s - TX_s,
  C_d ~ alpha1 * YD + alpha2 * H_h[-1],
  H_h ~ YD - C_d + H_h[-1],
  N_s ~ N_d,
  N_d ~ Y / W,
  C_s ~ C_d,
  G_s ~ G_d,
  Y ~ C_s + G_s,
  TX_d ~ theta * W * N_s,
  H_s ~ G_d - TX_d + H_s[-1]
)

external <- sfcr_set(G_d ~ 20, W ~ 1, alpha1 ~ 0.6, alpha2 ~ 0.4, theta ~ 0.2)

# `periods` is set to 10 to run faster. A usual model should run at
# least 50 periods to find a steady state
sfcr_baseline(equations = eqs, external = external, periods = 10)

}
\references{
\insertRef{kinsella2011gauss}{sfcr}
}
\seealso{
\code{\link[igraph]{components}}
}
\author{
João Macalós, \email{joaomacalos@gmail.com}
}
